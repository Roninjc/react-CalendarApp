{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/formReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/form.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-no.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","events","activeEvent","now","moment","minutes","seconds","add","nowPlus1","clone","initEvent","title","notes","start","toDate","end","modalOpen","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","form","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","formSetValues","values","formClearValues","prepareEvents","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","formLoginValues","handleLoginInputChanges","lEmail","lPassword","formRegisterValues","handleRegisterInputChanges","rName","rEmail","rPassword1","rPassword2","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","CalendarModal","formValues","titleValid","setTitleValid","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","onSelecting","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.885a90ab.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set active',\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Updated event',\n    eventDeleted: '[event] Deleted event',\n    eventLoaded: '[event] Events loaded',\n    eventLogout: '[event] Clear events logout',\n\n    formSetValues: '[form] Set values',\n    formClearValues: '[form] Clear values',\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] login',\n    authStartregister: '[auth] Start register',\n    authStartRenewToken: '[auth] Start renew token',\n    authLogout: '[auth] Logout',\n\n}\n","import { types } from '../types/types';\n\n// {\n//     id: mfuyr7587og,\n//     title: 'Cumple',\n//     start: now.toDate(),\n//     end: nowPlus1.toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Jesus'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n    \n        default:\n            return state;\n    }\n}\n","import moment from 'moment';\n\nimport { types } from \"../types/types\";\n\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initialState = {\n    initEvent: {\n        title: 'Udefinert',\n        notes: '',\n        start: now.toDate(),\n        end: nowPlus1.toDate()\n    }\n};\n\nexport const formReducer = ( state = initialState, action ) => {\n    \n    switch ( action.type ) {\n        case types.formSetValues:\n            return {\n                ...state,\n                initEvent: action.payload\n            }\n    \n        case types.formClearValues:\n            return {\n                ...state,\n                initEvent: initialState.initEvent\n            }\n    \n        default:\n            return state;\n    }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n    \n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport { calendarReducer } from './calendarReducer';\nimport { formReducer } from './formReducer';\nimport { uiReducer } from './uiReducer';\nimport { authReducer } from './authReducer';\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    form: formReducer,\n    auth: authReducer\n});\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n","\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nexport const fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n","import { types } from '../types/types';\n\n\nexport const formSetValues = (values) => ({\n    type: types.formSetValues,\n    payload: values\n});\n\nexport const formClearValues = () => ({ type: types.formClearValues });\n","import moment from 'moment';\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate()\n        })\n    )\n\n}\n","import Swal from 'sweetalert2';\n\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport { types } from '../types/types';\n\n\nexport const eventStartAddNew = (event) => {\n    return async( dispatch, getState ) =>{\n\n        const { uid, name } = getState().auth;\n        \n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n\n                dispatch( eventAddNew(event) );\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n};\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventLogout = () => ({ type: types.eventLogout });\n\nexport const eventStartUpdate = ( event ) => {\n    return async(dispatch) => {\n\n        try {\n\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch(eventUpdated( event ) );\n            } else {\n                Swal.fire('Feil', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n};\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => {\n    return async( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch(eventDeleted() );\n            } else {\n                Swal.fire('Feil', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareEvents( body.events );\n            \n            dispatch( eventLoaded( events ) );\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n","import Swal from 'sweetalert2';\n\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport { formClearValues } from './form';\nimport { eventLogout } from './events';\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n        \n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n            \n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }));\n        } else {\n            Swal.fire('Feil', body.msg, 'error');\n        }\n\n    }\n}\n\nexport const startRegister = ( name, email, password ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { name, email, password }, 'POST' );\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n            \n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }));\n        } else {\n            Swal.fire('Feil', body.msg, 'error');\n        }\n    }\n}\n\nexport const startChecking = () => {\n    return async( dispatch ) => {\n        \n        const isCurrentToken = !!(localStorage.getItem('token') || '');\n \n        if (!isCurrentToken){\n            dispatch( checkingFinish() ); \n            return;\n        }\n\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n            \n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }));\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () =>({ type: types.authCheckingFinish });\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n        localStorage.clear();\n\n        dispatch( eventLogout() );\n        dispatch( formClearValues() );\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout });\n","import { useState } from \"react\";\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ({ target }) => {\n        \n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\n\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChanges ] = useForm({});\n\n    const { lEmail, lPassword } = formLoginValues;\n\n    const [ formRegisterValues, handleRegisterInputChanges ] = useForm({});\n\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        dispatch( startLogin( lEmail, lPassword ) );\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if ( rPassword1 !== rPassword2 ) {\n            Swal.fire('Feil', 'Passordene er ikke de samme', 'error');\n        }\n\n        dispatch( startRegister( rName ,rEmail, rPassword1 ) );\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Log in</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChanges }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Passord\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChanges }\n                            />\n                        </div>\n                        <div className=\"form-group center\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registrering</h3>\n                    <form onSubmit= { handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Navn\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChanges }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChanges }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Passord\"\n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChanges }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Gjenta passord\"\n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChanges }\n                            />\n                        </div>\n\n                        <div className=\"form-group center\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Opprett konto\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n\n            <button\n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Log ut</span>\n            </button>\n            \n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Hele dagen',\n    previous: '<',\n    next: '>',\n    today: 'I dag',\n    month: 'Måned',\n    week: 'Uke',\n    day: 'Dag',\n    agenda: 'Agenda',\n    date: 'Dato',\n    time: 'Time',\n    event: 'Event',\n    noEventsInRange: 'Det er ikke mer event her',\n    showMore: total => `+ Se mer (${total})`\n};","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\nimport { formClearValues, formSetValues } from '../../actions/form';\n\nimport './modal.css';\nimport '../../styles.css';\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n};\nModal.setAppElement('#root');\n\n// const now = moment().minutes(0).seconds(0).add(1, 'hours');\n// const nowPlus1 = now.clone().add(1, 'hours');\n\n// const initEvent = {\n//     title: 'Udefinert',\n//     notes: '',\n//     start: now.toDate(),\n//     end: nowPlus1.toDate()\n// };\n\n\nexport const CalendarModal = () => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n    const { initEvent: formValues } = useSelector(state => state.form);\n\n    // const [dateStart, setDateStart] = useState( now.toDate() );\n    // const [dateEnd, setDateEnd] = useState( nowPlus1.toDate() );\n    const [titleValid, setTitleValid] = useState(true);\n\n    // const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            // setFormValues( activeEvent );\n            dispatch( formSetValues( activeEvent ) );\n        } else {\n            // setFormValues( initEvent );\n            dispatch( formClearValues() );\n        }\n    }, [ activeEvent, dispatch ]);\n\n    const handleInputChange = ({ target }) => {\n\n        // setFormValues({\n        //     ...formValues,\n        //     [target.name]: target.value\n        // });\n        dispatch( formSetValues({\n            ...formValues,\n            [target.name]: target.value\n        }));\n\n    }\n\n    const closeModal = () => {\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        // setFormValues( initEvent );\n        dispatch( formClearValues() );\n    }\n\n    const hanldeStartDateChange = (e) => {\n        // setDateStart( e );\n        // setFormValues({\n        //     ...formValues,\n        //     start: e\n        // });\n        dispatch( formSetValues({\n            ...formValues,\n            start: e\n        }));\n    }\n\n    const hanldeEndDateChange = (e) => {\n        // setDateEnd( e );\n        // setFormValues({\n        //     ...formValues,\n        //     end: e\n        // });\n        dispatch( formSetValues({\n            ...formValues,\n            end: e\n        }));\n    }\n\n    const handelSubmitForm = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Feil', 'Sluttid må være senere enn starttid', 'error');\n        }\n\n        if ( title.trim() < 1 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) );\n        } else {\n            dispatch( eventStartAddNew( formValues ) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n    }\n\n    return (\n        <Modal\n            isOpen={ modalOpen }\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={ customStyles }\n            closeTimeoutMS={ 200 }\n            className=\"modal backdrop box-shadow\"\n            overlayClassName=\"modal-fondo\"\n        >\n\n            <h1> { (activeEvent) ? 'Redigere arrangement' : 'Nytt arrangement' } </h1>\n            <hr />\n            <form\n                className=\"container\"\n                onSubmit={ handelSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Startdato og klokkeslett</label>\n                    <DateTimePicker\n                        onChange={ hanldeStartDateChange }\n                        value={ start }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Sluttdato og klokkeslett</label>\n                    <DateTimePicker\n                        onChange={ hanldeEndDateChange }\n                        value={ end }\n                        minDate={ start }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Tittel og notater</label>\n                    <input \n                        type=\"text\" \n                        className={`form-control transparent ${ !titleValid && 'is-invalid' }`}\n                        placeholder=\"Hendelsestittel\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Kort beskrivelse</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control transparent\"\n                        placeholder=\"Notater\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Tilleggsinformasjon</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Lagre</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch( uiOpenModal() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary fab box-shadow\"\n            onClick={ handleClick }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger box-shadow\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Slutt arrangement </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-no';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\nimport { formSetValues } from '../../actions/form';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/nb';\n\nmoment.locale('no');\n\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\n\n// const events = [{\n//     title: 'Cumple',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Jesus'\n//     }\n// }]\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { initEvent: formValues } = useSelector(state => state.form);\n    const { uid } = useSelector(state => state.auth);\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n    // const [slot, setSlot] = useState(\"\");\n\n    useEffect(() => {\n        \n        dispatch( eventStartLoading() );\n\n    }, [ dispatch ]);\n\n    const onDoubleClickEvent = (e) => {\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive(e) );\n    }\n\n    const onSelecting = (e) => {\n        // TODO: open modal with selected start and end.\n        // console.log(e);\n        // dispatch( formSetValues({\n        //     ...formValues,\n        //     start: e.start,\n        //     end: e.end\n        // }));\n        // alert('Aqui estamos');\n        // dispatch( uiOpenModal() );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        dispatch( eventClearActiveEvent() );\n        // setSlot(e);\n        if ( e.action === 'doubleClick' ) {\n            dispatch( formSetValues({\n                ...formValues,\n                start: e.start,\n                end: e.end\n            }));\n            dispatch( uiOpenModal() );\n        }\n    }\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        \n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: '0.8',\n            display: 'block',\n            color: 'white'\n        }\n\n        return {\n            style\n        }\n\n    }\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClickEvent }\n                onSelectEvent={ onSelectEvent }\n                onSelectSlot={ onSelectSlot }\n                onSelecting={ onSelecting }\n                selectable={ true }\n                onView={ onViewChange }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <AddNewFab />\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n\n            <CalendarModal />\n\n        </div>\n    )\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n\r\n        />\r\n    )\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/\" /> )\r\n            )}\r\n\r\n        />\r\n    )\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { \n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\n\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nimport '../loader.css';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n\n    }, [dispatch])\n\n    if ( checking ) {\n        // return (<h5> Loading...</h5>);\n        return (\n            <div className=\"lontainer\">\n                <div className=\"loader\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n            </div>\n        );\n        // TODO: cambiar por un componente de loading\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={ CalendarScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}